{"version":3,"sources":["firebase.js","reducer.js","Stateprovider.js","components/Login.jsx","components/Header.jsx","components/Sidebar.jsx","components/Post.jsx","components/Main.jsx","App.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","provider","GoogleAuthProvider","db","firestore","actionTypes","reducer","state","action","type","isopen","user","darkMode","StateContext","createContext","StateProvider","initialState","children","Provider","value","useReducer","useStateValue","useContext","Login","dispatch","className","Button","variant","color","onClick","signInWithPopup","then","result","catch","err","alert","message","Header","IconButton","fontSize","Avatar","src","photoURL","Switch","checked","onChange","signOut","Sidebar","useState","setWeatherdata","useEffect","successCallback","position","console","log","coords","longitud","latitude","URL","fetch","headers","response","json","data","errorCallback","navigator","geolocation","getCurrentPosition","displayName","Post","forwardRef","ref","id","title","text","isBlue","username","avatar","collection","doc","delete","likedPost","get","update","Main","posts","setPosts","input","setInput","orderBy","onSnapshot","snapshot","docs","map","noValidate","autoComplete","TextField","label","e","target","preventDefault","add","timestamp","FieldValue","serverTimestamp","App","theme","createMuiTheme","palette","onAuthStateChanged","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","darkmode","document","getElementById"],"mappings":"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","file":"static/js/main.3b1926d2.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCevn13Vl9k56jCo82uP14Xalrgcx7Vo64\",\r\n  authDomain: \"login-system-541b2.firebaseapp.com\",\r\n  projectId: \"login-system-541b2\",\r\n  storageBucket: \"login-system-541b2.appspot.com\",\r\n  messagingSenderId: \"492439252294\",\r\n  appId: \"1:492439252294:web:44709e9e340d3cd5544947\"\r\n};\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nconst db = firebaseApp.firestore();\r\n\r\nexport { db, auth, provider };\r\n","export const initialState = {\r\n  isopen: false,\r\n  user: null,\r\n  darkmode: false,\r\n};\r\n\r\n//como no estÃ¡ exportada por default necesita ser importada con llaves.\r\nexport const actionTypes = {\r\n  TOGGLE_MENU: \"TOGGLE_MENU\",\r\n  SET_USER: \"SET_USER\",\r\n  SET_DARKMODE:\"SET_DARKMODE\",\r\n};\r\n\r\n//escucha si se ha alterado el estado inicial.\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.TOGGLE_MENU:\r\n      return {\r\n        ...state,\r\n        isopen: action.isopen,\r\n      };\r\n    case actionTypes.SET_USER:\r\n      return { ...state, user: action.user };\r\n      case actionTypes.SET_DARKMODE:\r\n      return { ...state, darkMode: action.darkMode };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//como se exporta por default no necesita llaves al ser importado\r\nexport default reducer;\r\n","import { createContext, useReducer, useContext } from \"react\";\r\n\r\n\r\nexport const StateContext = createContext();\r\n\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => {\r\n  return (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n      {children}\r\n    </StateContext.Provider>\r\n  );\r\n};\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import \"./Login.css\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { auth, provider } from \"../firebase\";\r\nimport { actionTypes } from \"../reducer\";\r\nimport { useStateValue } from \"../Stateprovider\";\r\n\r\nconst Login = () => {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const signin = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then(result =>\r\n        dispatch({\r\n          type: actionTypes.SET_USER,\r\n          user: result.user,\r\n        })\r\n      )\r\n      .catch((err) => alert(err.message));\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <h1>Welcome to our Blog App!</h1>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={signin}>\r\n        Sign in with Google\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import \"./Header.css\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { Avatar, Button, Switch } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { useStateValue } from \"../Stateprovider\";\r\nimport { actionTypes } from \"../reducer.js\";\r\nimport { auth } from \"../firebase\";\r\n\r\nconst Header = () => {\r\n  const [{ isopen, user, darkMode }, dispatch] = useStateValue();\r\n  const signout = () => {\r\n    auth.signOut().then((user) =>\r\n      dispatch({\r\n        type: actionTypes.SET_USER,\r\n        user: null,\r\n      })\r\n    );\r\n  };\r\n  const toggleMenu = () => {\r\n    dispatch({\r\n      type: actionTypes.TOGGLE_MENU,\r\n      isopen: !isopen,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">\r\n        <IconButton onClick={toggleMenu}>\r\n          <MenuIcon fontSize=\"large\" />\r\n        </IconButton>\r\n      </div>\r\n\r\n      <div className=\"header__right\">\r\n        <Avatar src={user?.photoURL} />\r\n        <Switch\r\n          checked={darkMode}\r\n          onChange={() => {\r\n            dispatch({\r\n              type: actionTypes.SET_DARKMODE,\r\n              darkMode: !darkMode,\r\n            });\r\n          }}\r\n        />\r\n        {/* si existe user muestra el botÃ³n, si no, no lo muestres. */}\r\n        {user && (\r\n          <Button onClick={signout} variant=\"contained\">\r\n            Sign out\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import \"./Sidebar.css\";\r\nimport { useStateValue } from \"../Stateprovider\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Sidebar = () => {\r\n  const [weatherdata, setWeatherdata] = useState();\r\n\r\n  useEffect(() => {\r\n    const successCallback = (position) => {\r\n      console.log(position.coords.longitud, position.coords.latitude);\r\n      let URL = `https://community-open-weather-map.p.rapidapi.com/find?q=%3CREQUIRED%3E&cnt=0&mode=null&lon=${position.coords.longitud}&type=link%2C%20accurate&lat=${position.coords.latitude}&units=metric`;\r\n      fetch(URL, {\r\n        headers: {\r\n          \"x-rapidapi-key\":\r\n            \"60294d8dc7mshb3fbb7c4f9056e2p172fb0jsn2ec4e844ca88\",\r\n          \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => setWeatherdata(data))\r\n        .then((response) => {\r\n          console.log(response);\r\n        });\r\n    };\r\n    const errorCallback = (err) => console.log(err);\r\n    return () => {\r\n      navigator.geolocation.getCurrentPosition(successCallback, errorCallback);\r\n    };\r\n  }, []);\r\n\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__top\">\r\n        {/* <h4>{weatherdata.city.name}</h4>\r\n        <h3>{Math.round(weatherdata?.list[0].main.temp)}</h3> */}\r\n      </div>\r\n      <div className=\"sidebar__bottom\">\r\n        <h4>Welcome</h4>\r\n        <h4>{user?.displayName}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import \"./Post.css\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { useStateValue } from \"../Stateprovider\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport { db } from \"../firebase\";\r\nimport { forwardRef } from \"react\";\r\n\r\nconst Post = forwardRef(\r\n  ({ id, title, text, isBlue, username, avatar }, ref) => {\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    const removePost = () => {\r\n      //metodo delete para borrar el post segÃºn su id\r\n      db.collection(\"posts\").doc(id).delete();\r\n    };\r\n\r\n    const likePost = () => {\r\n      const likedPost = db.collection(\"posts\").doc(id);\r\n      likedPost.get().then((doc) =>\r\n        likedPost.update({\r\n          isBlue: !doc.data().isBlue,\r\n        })\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div className=\"post\" ref={ref}>\r\n        <div className=\"post__body\">\r\n          <div className=\"post__bodyLeft\">\r\n            <Avatar className=\"avatar\" src={avatar} />\r\n            <h2>{title}</h2>\r\n            <h3>{text}</h3>\r\n          </div>\r\n          <IconButton onClick={removePost}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"post__icons\">\r\n        <h3>{username}</h3>\r\n          <IconButton onClick={likePost}>\r\n          <ThumbUpAltOutlinedIcon color={isBlue ? \"primary\" : \"\"} />\r\n          </IconButton>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Post;\r\n","import { useState, useEffect } from \"react\";\r\nimport \"./Main.css\";\r\nimport Post from \"./Post.jsx\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { db } from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport { useStateValue } from \"../Stateprovider\";\r\n\r\n\r\nconst Main = () => {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const [posts, setPosts] = useState([]);\r\n  const [input, setInput] = useState({\r\n    title: \"\",\r\n    text: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    db.collection(\"posts\").orderBy(\"timestamp\", \"desc\").onSnapshot((snapshot) =>\r\n      setPosts(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (input.text) {\r\n      db.collection(\"posts\").add({\r\n        title: input.title,\r\n        text: input.text,\r\n        username: user?.displayName,\r\n        avatar: user?.photoURL,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        isBlue: false, \r\n      });\r\n      setInput({\r\n        title: \"\",\r\n        text: \"\",\r\n      });\r\n    } else {\r\n      alert(\"Add your post here\");\r\n    }\r\n\r\n    console.log(posts);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"main_input\">\r\n        <form noValidate autoComplete=\"off\">\r\n          <div className=\"main__inputForm\">\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Title\"\r\n              value={input.title}\r\n              onChange={(e) => setInput({ ...input, title: e.target.value })}\r\n            />\r\n            <TextField\r\n              className=\"main__inputFormText\"\r\n              id=\"outlined-basic\"\r\n              label=\"Enter your post here\"\r\n              variant=\"outlined\"\r\n              value={input.text}\r\n              onChange={(e) => setInput({ ...input, text: e.target.value })}\r\n            />\r\n            <button className=\"button\" type=\"submit\" onClick={handleSubmit}></button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div className=\"main__posts\">\r\n      <FlipMove>\r\n        {posts.map(({ id, data: { title, text, isBlue, username, avatar } }) => (\r\n          <Post key={id} id={id} title={title} text={text} isBlue={isBlue} username={username} avatar={avatar}/>\r\n        ))}\r\n        </FlipMove> \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import \"./App.css\";\nimport Login from \"./components/Login.jsx\";\nimport Header from \"./components/Header.jsx\";\nimport Sidebar from \"./components/Sidebar\";\nimport Main from \"./components/Main.jsx\";\nimport { useStateValue } from \"./Stateprovider\";\nimport { useEffect } from \"react\";\nimport { auth } from \"./firebase\";\nimport { actionTypes } from \"./reducer\";\nimport { createMuiTheme, CssBaseline, ThemeProvider } from \"@material-ui/core\";\n\nfunction App() {\n  const [{ isopen, user, darkMode }, dispatch] = useStateValue();\n\n  const theme = createMuiTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n    },\n  });\n\n  //useEffect admite 2 parÃ¡metros, funcion flecha + array, cada vez q se refresque se va a ejecutar la funcion\n  useEffect(() => {\n    //cada vez q cambie el usuario ejecuta lo q hay dentro.\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        dispatch({\n          type: actionTypes.SET_USER,\n          user: user,\n        });\n      }\n    });\n  }, []);\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <>\n          <Header />\n          <Login />\n        </>\n      ) : (\n        <>\n          <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Header />\n            <div className={`app__central ${isopen ? \"displayed\" : \"\"}`}>\n              <Sidebar />\n              <Main />\n            </div>\n          </ThemeProvider>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { StateProvider } from \"./Stateprovider\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n    \n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}